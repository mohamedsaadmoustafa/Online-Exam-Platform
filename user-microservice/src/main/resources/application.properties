server.port=8009
server.servlet.context-path=/api

page.default-page-size=5
kafka.topic.EV3=exam-summary-topic

# Define Kafka topics
kafka.topics.EV1=exam-created-topic
kafka.topics.EV2=exam-warning-topic
kafka.topics.EV3=exam-summary-topic

kafka.group-id=spring-group

# Configure Kafka connection
spring.kafka.producer.client-id=spring-client
spring.kafka.bootstrap-servers=localhost:9092

spring.kafka.consumer.bootstrap-servers=localhost:9092
spring.kafka.consumer.auto-offset-reset=latest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer

spring.kafka.consumer.properties.spring.json.trusted.packages=com.example.shared.model

# Configure Kafka listener options
spring.kafka.listener.ack-mode=MANUAL_IMMEDIATE

# Configure the consumer factory
spring.kafka.consumer.group-id=spring-group
spring.kafka.consumer.enable-auto-commit=false
spring.kafka.consumer.auto-commit-interval=100
spring.kafka.consumer.max-poll-records=10
spring.kafka.consumer.fetch-min-size=1
spring.kafka.consumer.fetch-max-wait=5000

# Configure the producer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer


# Mongo DB connection
spring.data.mongodb.uri=mongodb://localhost:27017/user-microservice
spring.data.mongodb.database=exam-summary
logging.level.org.springframework.data.mongodb.core.MongoTemplate=DEBUG
spring.data.mongodb.repository.mapping-entities=com.example.user.model.exam_summary


#keycloak.realm=Realm_name
#keycloak.auth-server-url=http://localhost:8080/
#keycloak.ssl-required=external
#keycloak.resource=spring-boot-client
#keycloak.credentials.secret=cQIDd0q8811GsqoHmMvjUfXvt7jWC1xm
##keycloak.use-resource-role-mappings=true
#keycloak.bearer-only=true
#keycloak.use-resource-role-mappings: false


keycloak.realm=realm
keycloak.auth-server-url=http://localhost:8080/
##use external in production
#keycloak.ssl-required=external
keycloak.resource=client
keycloak.credentials.secret=UdMcpXm3GXHDxEOwJfxL1lwpLGGGL58V
#keycloak.use-resource-role-mappings=true
keycloak.bearer-only=true
keycloak.use-resource-role-mappings: false


# ToDo: improve this url.
# to use it in code -> @Value("${questions.bank.url}")
questions.bank.url=http://localhost:8083/question/
# Enable global CORS configuration
spring.web.cors.enabled=true
# Comma-separated list of allowed origins (use * to allow all)
spring.web.cors.allowed-origins=*
# Comma-separated list of allowed HTTP methods
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE
# Comma-separated list of allowed headers
spring.web.cors.allowed-headers=Origin,Accept,X-Requested-With,Content-Type,Authorization
# Set whether credentials are supported (true/false)
spring.web.cors.allow-credentials=true